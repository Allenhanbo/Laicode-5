//There is a factory with two production line, and each line has the same station
//And each station product the same parts with different cost, which are represented by array1 and array2
// the cost of switch to another production line are represented by swith12 and swith21
// return the min time to product one product

//dp[i][1] represents the time cost of producting i parts and the last part is producted on line 1
//dp[i][1] =
// res = min(dp[i][0], dp[i][1])

private int minTime(int[] array1, int[] array2, int[] switch12, int[] swith21) {
    int[][] dp = new int[array1.length][2];
    dp[0][0] = array1[0];
    dp[0][1] = array1[1];
    for(int i = 1; i < array1.length; i++) {
      dp[i][0] = Math.min((dp[i-1][0] + array1[i]),(dp[i-1][1] + swith21(i-1) + array1[i]));
      dp[i][1] = Math.min((dp[i-1][1] + array2[i]), (dp[i-1][0]+switch12(i-1) + array2[1]));
    }
    return Math.min(dp[array1.length-1][0],dp[array1.length-1][0]);
}

// follow up if there has N production lines?
